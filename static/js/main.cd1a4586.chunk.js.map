{"version":3,"sources":["components/ClassSelect.js","components/PreviewForm.js","utils.js","constants.js","components/MainForm.js","App.js","reportWebVitals.js","index.js"],"names":["ClassSelect","handleChangeClass","course","List","Typography","Select","onChange","map","el","MenuItem","value","variant","name","startDate","endDate","slug","useStyles","makeStyles","theme","root","width","padding","spacing","margin","divider","height","backgroundColor","content","marginBottom","marginTop","labels","minWidth","fontWeight","schedule","nested","paddingLeft","paddingRight","button","float","PreviewForm","data","shouldRender","classes","useState","open","setOpen","downloadFile","setDownloadFile","className","Box","mt","border","borderColor","borderRadius","Grid","container","direction","ListItemText","Divider","email","birthday","ListItem","onClick","primary","Collapse","in","timeout","unmountOnExit","item","md","Button","size","downloadData","encodeURIComponent","JSON","stringify","color","href","download","validateBirthday","input","test","length","classDates","subjects","dates","sports","Date","toDateString","art","literature","music","display","form","marginLeft","previewButton","cancelButton","textField","birthdayField","MainForm","setShouldRender","showMonthError","setShowMonthError","showDayError","setShowDayError","showYearError","setShowYearError","showScheduleError","setShowScheduleError","sportsCheck","artCheck","literatureCheck","musicCheck","subject","setSubject","birthMonth","birthDay","birthYear","userData","setUserData","emailError","showSubmit","handleTextChange","e","target","validBirthday","handleCheckChange","currentState","checked","currentSchedule","push","filter","slice","i","curr","courseStart","parse","courseEnd","currentStart","currentEnd","checkValidDates","onSubmit","preventDefault","bday","undefined","autoComplete","TextField","required","label","error","helperText","FormControl","component","FormLabel","FormHelperText","FormGroup","FormControlLabel","control","Checkbox","disabled","type","App","Container","maxWidth","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cd1a4586.chunk.js","sourcesContent":["import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nconst ClassSelect = ({ handleChangeClass, course }) => {\n  return (\n    <List>\n      <Typography>Select Your Classes below</Typography>\n      {course && (\n        <Select onChange={handleChangeClass}>\n          {course.map((el) => {\n            return (\n              <MenuItem key={el.slug} value={el}>\n                <Typography variant='h6'>{el.name}</Typography>\n                <Typography variant='caption'>{`${el.startDate} to ${el.endDate}`}</Typography>\n              </MenuItem>\n            );\n          })}\n        </Select>\n      )}\n    </List>\n  );\n};\n\nexport default ClassSelect;\n","/* eslint-disable no-unused-expressions */\nimport React, { useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Collapse from '@material-ui/core/Collapse';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '500px',\n    padding: theme.spacing(0, 2, 4, 2),\n  },\n  spacing: {\n    margin: '10px',\n  },\n  divider: {\n    height: '1px',\n    backgroundColor: '#E7E7EA',\n  },\n  content: {\n    marginBottom: theme.spacing(2),\n    marginTop: theme.spacing(3),\n  },\n  labels: {\n    margin: theme.spacing(3, 0, 3, 4),\n    minWidth: theme.spacing(10),\n    fontWeight: '500',\n  },\n  schedule: {\n    margin: theme.spacing(3, 0, 0, 2),\n    fontWeight: '600',\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n    paddingRight: theme.spacing(4),\n  },\n  button: {\n    float: 'right',\n    margin: '5px',\n  },\n}));\n\nfunction PreviewForm({ data, shouldRender }) {\n  const classes = useStyles();\n  const [open, setOpen] = useState(true);\n  const [downloadFile, setDownloadFile] = useState(true);\n\n  const handleClick = () => {\n    setOpen(!open);\n  };\n\n  const handleDownload = () => {\n    const downloadData = `text/json;charset=utf-8,${encodeURIComponent(\n      JSON.stringify(data)\n    )}`;\n\n    setDownloadFile(downloadData);\n  };\n\n  return (\n    <div className={classes.root}>\n      {shouldRender && (\n        <>\n          <Box mt={0} border={1} borderColor='#E7E7EA' borderRadius={15}>\n            <List>\n              <Grid container direction='row'>\n                <Grid>\n                  <Typography className={classes.labels}>Name</Typography>\n                </Grid>\n                <Box className={classes.spacing} />\n                <Grid>\n                  <ListItemText className={classes.content}>\n                    {data.name}\n                  </ListItemText>\n                </Grid>\n              </Grid>\n              <Divider className={classes.divider} />\n              <Grid container direction='row'>\n                <Grid>\n                  <Typography className={classes.labels}>\n                    Email Address{' '}\n                  </Typography>\n                </Grid>\n                <Box className={classes.spacing} />\n                <Grid>\n                  <ListItemText className={classes.content}>\n                    {data.email}{' '}\n                  </ListItemText>\n                </Grid>\n              </Grid>\n              <Divider className={classes.divider} />\n\n              <Grid container direction='row'>\n                <Grid>\n                  <Typography className={classes.labels}>Birthday </Typography>\n                </Grid>\n                <Box className={classes.spacing} />\n                <Grid>\n                  <ListItemText className={classes.content}>\n                    {data.birthday}{' '}\n                  </ListItemText>\n                </Grid>\n              </Grid>\n              <Divider className={classes.divider} />\n\n              <Grid container direction='row'>\n                <Grid>\n                  <ListItem button onClick={handleClick}>\n                    <ListItemText\n                      className={classes.schedule}\n                      primary='Scheduled Classes'\n                    />\n                    {open ? <ExpandLess /> : <ExpandMore />}\n                  </ListItem>\n                  <Collapse in={open} timeout='auto' unmountOnExit>\n                    <List>\n                      {data.schedule.map((item) => {\n                        return (\n                          <ListItem button className={classes.nested}>\n                            <Grid direction='row' item md={10}>\n                              <Typography variant='h6'>{item.name}</Typography>\n                            </Grid>\n\n                            <ListItemText>{`${item.startDate} to ${item.endDate}`}</ListItemText>\n                          </ListItem>\n                        );\n                      })}\n                    </List>\n                  </Collapse>\n                </Grid>\n                <Box className={classes.spacing} />\n              </Grid>\n            </List>\n            <Button\n              size='small'\n              onClick={handleDownload}\n              className={classes.button}\n              variant='outlined'\n              color='primary'\n              href={`data: ${downloadFile}`}\n              download='data.json'\n            >\n              Download JSON\n            </Button>\n          </Box>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default PreviewForm;\n","export const validateBirthday = (input, value) => {\n    const isNumber = /^\\d+$/.test(value);\n    if (!isNumber) return false;\n\n    if (input === 'birthDay') return value >= 1 && value <= 31;\n    else if (input === 'birthMonth') {\n      const validMonth = /^(0[1-9]|1[012])$/.test(value);\n      return validMonth;\n    } else {\n      return value.length === 4;\n    }\n  };\n\n  export const checkValidDates = (schedule, course) => {\n    const hasDuplicates = schedule.filter((item) => {\n      return item.slug.slice(0, 3) === course.slug.slice(0, 3);\n    });\n\n    if (hasDuplicates.length !== 0) return false;\n\n    for (let i = 0; i < schedule.length; i++) {\n      const curr = schedule[i];\n      let courseStart = Date.parse(course.startDate);\n      let courseEnd = Date.parse(course.endDate);\n      let currentStart = Date.parse(curr.startDate);\n      let currentEnd = Date.parse(curr.endDate);\n\n      if (currentStart < courseEnd && courseStart < currentEnd) return false;\n    }\n    return true;\n  };","export const classDates = {\n  subjects: ['Sports', 'Art', 'Literature', 'Music'],\n  dates: {\n    sports: [\n      {\n        name: 'Sports 100',\n        slug: 'spt100',\n        startDate: new Date('2020-07-23').toDateString(),\n        endDate: new Date('2020-08-26').toDateString(),\n      },\n      {\n        name: 'Sports 101',\n        slug: 'spt101',\n        startDate: new Date('2020-08-26').toDateString(),\n        endDate: new Date('2020-09-26').toDateString(),\n      },\n    ],\n    art: [\n      {\n        name: 'Art 100',\n        slug: 'art100',\n        startDate: new Date('2020-05-10').toDateString(),\n        endDate: new Date('2020-06-10').toDateString(),\n      },\n      {\n        name: 'Art 101',\n        slug: 'art101',\n        startDate: new Date('2020-07-11').toDateString(),\n        endDate: new Date('2020-08-11').toDateString(),\n      },\n    ],\n    literature: [\n      {\n        name: 'Literature 100',\n        slug: 'lit100',\n        startDate: new Date('2020-07-11').toDateString(),\n        endDate: new Date('2020-10-11').toDateString(),\n      },\n    ],\n    music: [\n      {\n        name: 'Music 100',\n        slug: 'msc100',\n        startDate: new Date('2020-06-09').toDateString(),\n        endDate: new Date('2020-07-09').toDateString(),\n      },\n      {\n        name: 'Music 101',\n        slug: 'msc101',\n        startDate: new Date('2020-08-09').toDateString(),\n        endDate: new Date('2020-09-09').toDateString(),\n      },\n    ],\n  },\n};\n","/* eslint-disable no-unused-expressions */\nimport React, { useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { FormControlLabel, Checkbox } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport ClassSelect from './ClassSelect';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PreviewForm from './PreviewForm';\nimport { validateBirthday, checkValidDates } from '../utils';\nimport { classDates } from '../constants';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  form: {\n    width: '500px',\n    marginLeft: '5px',\n  },\n  previewButton: {\n    margin: '5px',\n  },\n  cancelButton: {\n    margin: '5px',\n  },\n  textField: {\n    width: '245px',\n    margin: '5px',\n  },\n  birthdayField: {\n    width: '75px',\n    margin: '5px',\n  },\n}));\n\nfunction MainForm() {\n  const classes = useStyles();\n  const [shouldRender, setShouldRender] = useState(false);\n  const [showMonthError, setShowMonthError] = useState(false);\n  const [showDayError, setShowDayError] = useState(false);\n  const [showYearError, setShowYearError] = useState(false);\n  const [showScheduleError, setShowScheduleError] = useState(false);\n  const [subject, setSubject] = useState({\n    subjects: {\n      sportsCheck: false,\n      artCheck: false,\n      literatureCheck: false,\n      musicCheck: false,\n    },\n  });\n\n  const [userData, setUserData] = useState({\n    name: '',\n    email: 'email@email.com',\n    birthday: '',\n    schedule: [],\n    birthMonth: '',\n    birthDay: '',\n    birthYear: '',\n  });\n\n  const {\n    sportsCheck,\n    artCheck,\n    literatureCheck,\n    musicCheck,\n  } = subject.subjects;\n\n  const emailError = !/\\S+@\\S+\\.\\S+/.test(userData.email);\n  const showSubmit =\n    !emailError && !showYearError && !showMonthError && !showDayError;\n\n  const handleTextChange = (e) => {\n    const {\n      target: { name, value },\n    } = e;\n    if (name === 'birthMonth') {\n      const validBirthday = validateBirthday(name, value);\n      !validBirthday ? setShowMonthError(true) : setShowMonthError(false);\n      setUserData({ ...userData, [name]: value });\n    } else if (name === 'birthDay') {\n      const validBirthday = validateBirthday(name, value);\n      !validBirthday ? setShowDayError(true) : setShowDayError(false);\n      setUserData({ ...userData, [name]: value });\n    } else if (name === 'birthYear') {\n      const validBirthday = validateBirthday(name, value);\n      !validBirthday ? setShowYearError(true) : setShowYearError(false);\n      setUserData({ ...userData, [name]: value });\n    } else {\n      setUserData({ ...userData, [name]: value });\n    }\n  };\n\n  const handleCheckChange = (e) => {\n    const currentState = subject.subjects;\n    const { checked, name } = e.target;\n    currentState[name] = checked;\n    setSubject({ ...userData, subjects: currentState });\n  };\n\n  const handleChangeClass = (e) => {\n    const { value } = e.target;\n    const currentSchedule = userData.schedule;\n    if (currentSchedule.length === 0) {\n      currentSchedule.push(value);\n      setUserData({\n        ...userData,\n        schedule: currentSchedule,\n      });\n      return;\n    }\n    if (currentSchedule.length >= 1) {\n      const shouldAddSchedule = checkValidDates(userData.schedule, value);\n      shouldAddSchedule\n        ? currentSchedule.push(value)\n        : setShowScheduleError(true);\n    }\n    setUserData({\n      ...userData,\n      schedule: currentSchedule,\n    });\n  };\n\n  const handleReset = (e) => {\n    e.preventDefault();\n    setSubject({\n      subjects: {\n        sportsCheck: false,\n        artCheck: false,\n        literatureCheck: false,\n        musicCheck: false,\n      },\n    });\n    setUserData({\n      name: '',\n      email: 'email@email.com',\n      birthday: '',\n      schedule: [],\n      birthMonth: '',\n      birthDay: '',\n      birthYear: '',\n    });\n    setShowScheduleError(false);\n    setShowYearError(false);\n    setShowMonthError(false);\n    setShowMonthError(false);\n    setShouldRender(false);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const { birthMonth, birthDay, birthYear } = userData;\n    const bday = `${birthMonth}/${birthDay}/${birthYear}`;\n\n    if (userData.schedule.length === 0) setShowScheduleError(true);\n\n    setUserData({\n      ...userData,\n      birthday: bday,\n      birthMonth: undefined,\n      birthDay: undefined,\n      birthYear: undefined,\n    });\n    setShouldRender(true);\n  };\n\n  return (\n    <div className={classes.root}>\n      <form className={classes.form} onSubmit={handleSubmit} autoComplete='off'>\n        <Grid container>\n          <Grid item md={4}>\n            <TextField\n              className={classes.textField}\n              onChange={handleTextChange}\n              required\n              label='Name'\n              variant='outlined'\n              name='name'\n              value={userData.name}\n            />\n            <TextField\n              className={classes.textField}\n              required\n              name='email'\n              onChange={handleTextChange}\n              label='Email Address'\n              variant='outlined'\n              error={emailError}\n              helperText={emailError ? 'Invalid Email address' : null}\n              value={userData.email}\n            />\n          </Grid>\n\n          <Grid item md={12} direction='row'>\n            <TextField\n              className={classes.birthdayField}\n              onChange={handleTextChange}\n              label='Month'\n              variant='outlined'\n              name='birthMonth'\n              required\n              error={showMonthError}\n              helperText={showMonthError ? 'Invalid Month' : null}\n              value={userData.birthMonth}\n            />\n            <TextField\n              className={classes.birthdayField}\n              onChange={handleTextChange}\n              label='Day'\n              required\n              variant='outlined'\n              name='birthDay'\n              error={showDayError}\n              helperText={showDayError ? 'Invalid Day' : null}\n              value={userData.birthDay}\n            />\n            <TextField\n              required\n              className={classes.birthdayField}\n              onChange={handleTextChange}\n              label='Year'\n              variant='outlined'\n              name='birthYear'\n              error={showYearError}\n              helperText={showYearError ? ' Invalid Year' : null}\n              value={userData.birthYear}\n            />\n          </Grid>\n\n          <FormControl component='fieldset' error={showScheduleError}>\n            <FormLabel component='legend'>Select Classes</FormLabel>\n\n            {showScheduleError && (\n              <FormHelperText>\n                Scheduling conflict! Please select a class or reset form and try\n                again\n              </FormHelperText>\n            )}\n\n            <FormGroup>\n              <FormHelperText>\n                You may select 1 class per area of study. Please ensure class\n                dates do not overlap\n              </FormHelperText>\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={sportsCheck}\n                    onChange={handleCheckChange}\n                    name='sportsCheck'\n                  />\n                }\n                label='Sports'\n              />\n\n              {sportsCheck && (\n                <ClassSelect\n                  data={userData}\n                  handleChangeClass={handleChangeClass}\n                  course={classDates.dates.sports}\n                />\n              )}\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={artCheck}\n                    onChange={handleCheckChange}\n                    name='artCheck'\n                  />\n                }\n                label='Art'\n              />\n\n              {artCheck && (\n                <ClassSelect\n                  data={userData}\n                  handleChangeClass={handleChangeClass}\n                  course={classDates.dates.art}\n                />\n              )}\n\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={literatureCheck}\n                    onChange={handleCheckChange}\n                    name='literatureCheck'\n                  />\n                }\n                label='Literature'\n              />\n\n              {literatureCheck && (\n                <ClassSelect\n                  data={userData}\n                  handleChangeClass={handleChangeClass}\n                  course={classDates.dates.literature}\n                />\n              )}\n\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={musicCheck}\n                    onChange={handleCheckChange}\n                    name='musicCheck'\n                  />\n                }\n                label='Music'\n              />\n              {musicCheck && (\n                <ClassSelect\n                  data={userData}\n                  handleChangeClass={handleChangeClass}\n                  course={classDates.dates.music}\n                />\n              )}\n            </FormGroup>\n          </FormControl>\n        </Grid>\n        <Button\n          className={classes.cancelButton}\n          onClick={handleReset}\n          variant='outlined'\n          color='secondary'\n        >\n          Reset\n        </Button>\n        <Button\n          className={classes.previewButton}\n          // onClick={handleSubmit}\n          variant='outlined'\n          color='primary'\n          disabled={!showSubmit}\n          type='submit'\n        >\n          Preview\n        </Button>\n      </form>\n      <PreviewForm data={userData} shouldRender={shouldRender} />\n    </div>\n  );\n}\n\nexport default MainForm;\n","import Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MainForm from './components/MainForm'\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    backgroundColor: '#ffff',\n    display: 'flex',\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <Container maxWidth='xl'>\n        <h1>Hello Media Alpha</h1>\n        <MainForm />\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}